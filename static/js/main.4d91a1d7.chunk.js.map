{"version":3,"sources":["static/cake_pic.png","static/twilight_dubstep.mp3","components/BackgroundMusic.jsx","components/Answer.jsx","components/Quote.jsx","quotes_data/real.js","quotes_data/fake.js","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["BackgroundMusic","audioRef","useRef","ref","src","backgroundFile","autoPlay","loop","Answer","checked","isCorrect","Slide","direction","in","mountOnEnter","unmountOnExit","Quote","quote","onCardSelect","selected","enabled","Card","style","WebkitBoxShadow","MozBoxShadow","boxShadow","CardActionArea","onClick","CardContent","Typography","variant","component","realQuotes","fakeQuotes","getRandomQuoteIndex","quotes","getRandomInt","length","max","Math","floor","random","Game","useState","currentFakeQuotes","setCurrentFakeQuotes","currentRealQuotes","setCurrentRealQuotes","fakeQuoteIndex","setFakeQuoteIndex","realQuoteIndex","setRealQuoteIndex","setChecked","answer","setAnswer","randomInt","setRandomInt","score","setScore","setIsCorrect","currentRealQuote","currentFakeQuote","leftQuote","rightQuote","handleCardSelect","Grid","container","spacing","justifyContent","alignItems","item","xs","Button","size","prev","disabled","newRealQuotes","Array","from","newFakeQuotes","splice","currentScore","Number","App","startGame","setStartGame","className","logo","alt","Zoom","transitionDelay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d91a1d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cake_pic.c50610e8.png\";","export default __webpack_public_path__ + \"static/media/twilight_dubstep.023697da.mp3\";","import { useRef } from \"react\";\nimport backgroundFile from \"../static/twilight_dubstep.mp3\";\n\nconst BackgroundMusic = () => {\n  const audioRef = useRef();\n\n  return (\n    <div>\n      <audio ref={audioRef} src={backgroundFile} autoPlay loop />\n    </div>\n  );\n};\n\nexport default BackgroundMusic;\n","import Slide from \"@mui/material/Slide\";\n\nconst Answer = ({ checked, isCorrect }) => {\n  return (\n    <>\n      <Slide direction=\"up\" in={checked} mountOnEnter unmountOnExit>\n        {isCorrect ? <p>✅</p> : <p>❌</p>}\n      </Slide>\n    </>\n  );\n};\n\nexport default Answer;\n","import Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\n\nexport default function Quote({ quote, onCardSelect, selected, enabled }) {\n  const handleClick = () => {\n    if (enabled) {\n      onCardSelect(quote);\n    }\n  };\n\n  const selectedAnswer = {\n    WebkitBoxShadow: \"inset 0px 0px 0px 5px red\",\n    MozBoxShadow: \"inset 0px 0px 0px 5px red\",\n    boxShadow: \"inset 0px 0px 0px 5px red\",\n  };\n\n  return (\n    <Card style={selected ? selectedAnswer : {}}>\n      <CardActionArea onClick={handleClick}>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"p\">\n            {quote}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","const realQuotes = [\n  `Aro started to laugh. \"Ha ha ha\", he chuckled.`,\n  `\"What if I’m not a superhero. What if I’m the bad guy?\"`,\n  \"It had been a while since I’d had a girls’ night out, and the estrogen rush was invigorating.\",\n  \"I saw several things simultaneously.\",\n  `\"It sounded like you were having Bella for lunch, and we came to see if you would share.\"`,\n  `\"Bella, it's not my fault if you are exceptionally unobservant.\"`,\n  `\"Aren't you hungry?\" he asked, distracted.\n    \"No.\" I didn't feel like mentioning that my stomach was already full - of butterflies.`,\n  \"The look only lasted a second, but it chilled me more than the freezing wind.\",\n  `\"Hey Jacob!\" I felt an unfamiliar surge of enthusiasm at his smile. I realized that I was pleased to see him. This knowledge surprised me.`,\n  \"Jacob was a gift from the gods.\",\n  \"And it did not matter if he did not want me. I would never want anything but him, no matter how long I lived.\",\n  `\"You are safe inside your mind. No one can reach you there.\"`,\n  \"Staring into his eyes always made me feel extraordinary ― sort of like my bones were turning spongy. I was also a little lightheaded, but that could have been because I'd forgotten to keep breathing. Again.\",\n];\n\nexport default realQuotes;\n","const fakeQuotes = [\n  \"Edward might be one of the so-called undead, but I felt death would be a welcome relief than to live one more second without him.\",\n  \"Rather than being afraid, I found the thought of Edward near my neck... tantalizing. Not for the first time, I found myself fervently glad that he couldn't read my thoughts.\",\n  `\"Bella, maybe it's time that you saw a professional.\"`,\n  \"Jacob looked at the ground. He looked so sad and angry - I wanted to reach out, but I knew any touch from me would only make things worse.\",\n  \"My heart pounded, a siren's call betraying me to both my protectors and my hunters. Jane's face remained impassive, a shadow of a cruel smirk on her beautiful porcelain features.\",\n  \"The sound of a wolf howl leaked through the car windows, echoing painfully in my chest and reverberating there as we sped away.\",\n  `\"What, these muscles?\" Jacob jokingly flexed his bicep and then laughed, his easygoing aura crackling around him like the sun.`,\n  `\"Edward, I don't care if I die. If you die, I may as well be dead already.\"`,\n  `I stared unseeingly into the mirror. \"Why do I even bother\", I muttered to myself as I tugged again at the hem of my sweater.`,\n  `\"Charlie, I'll be ok. I know what I'm doing.\"`,\n  `\"The vampires and werewolves thing, I couldn't care less.\" I said fiercely. \"I just see two people - Edward and Jacob.\"`,\n  \"How could I ever explain Edward to Renée? Sometimes, he still speaks like he's over a hundred years old - even though he looks seventeen.\",\n  \"More than anything I want to hold Edward tight, so tight that it's impossible for him to go - but I'm not strong enough. Not until I become one of them.\",\n];\n\nexport default fakeQuotes;\n","import { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Answer from \"./Answer\";\nimport Quote from \"./Quote\";\nimport realQuotes from \"../quotes_data/real\";\nimport fakeQuotes from \"../quotes_data/fake\";\n\nconst getRandomQuoteIndex = (quotes) => getRandomInt(quotes.length);\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst Game = () => {\n  const [currentFakeQuotes, setCurrentFakeQuotes] = useState(fakeQuotes);\n  const [currentRealQuotes, setCurrentRealQuotes] = useState(realQuotes);\n  const [fakeQuoteIndex, setFakeQuoteIndex] = useState(\n    getRandomQuoteIndex(currentFakeQuotes)\n  );\n  const [realQuoteIndex, setRealQuoteIndex] = useState(\n    getRandomQuoteIndex(currentRealQuotes)\n  );\n  const [checked, setChecked] = useState(false);\n  const [answer, setAnswer] = useState(\"\");\n  const [randomInt, setRandomInt] = useState(getRandomInt(2));\n  const [score, setScore] = useState(0);\n  const [isCorrect, setIsCorrect] = useState(false);\n\n  const updateQuotes = () => {\n    const newRealQuotes = Array.from(currentRealQuotes);\n    const newFakeQuotes = Array.from(currentFakeQuotes);\n    newRealQuotes.splice(realQuoteIndex, 1);\n    newFakeQuotes.splice(fakeQuoteIndex, 1);\n    setCurrentRealQuotes(newRealQuotes);\n    setCurrentFakeQuotes(newFakeQuotes);\n    setChecked(false);\n    setFakeQuoteIndex(getRandomQuoteIndex(newFakeQuotes));\n    setRealQuoteIndex(getRandomQuoteIndex(newRealQuotes));\n    setAnswer(\"\");\n    setRandomInt(getRandomInt(2));\n    let currentScore = Number(score);\n    if (isCorrect) {\n      currentScore++;\n    }\n    setScore(currentScore);\n  };\n\n  const currentRealQuote = currentRealQuotes[realQuoteIndex];\n  const currentFakeQuote = currentFakeQuotes[fakeQuoteIndex];\n\n  const leftQuote = randomInt === 1 ? currentRealQuote : currentFakeQuote;\n  const rightQuote =\n    leftQuote === currentRealQuote ? currentFakeQuote : currentRealQuote;\n\n  const handleCardSelect = (quote) => {\n    setAnswer(quote);\n  };\n\n  const handleCheckAnswer = () => {\n    if (answer === currentRealQuote) {\n      setIsCorrect(true);\n    } else {\n      setIsCorrect(false);\n    }\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      {currentFakeQuotes.length > 0 ? (\n        <>\n          <Grid item xs={6}>\n            <Quote\n              quote={leftQuote}\n              onCardSelect={handleCardSelect}\n              selected={answer === leftQuote}\n              enabled={!checked}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Quote\n              quote={rightQuote}\n              onCardSelect={handleCardSelect}\n              selected={answer === rightQuote}\n              enabled={!checked}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            {!checked && (\n              <Button\n                variant={\"contained\"}\n                size={\"large\"}\n                onClick={handleCheckAnswer}\n                disabled={answer === \"\"}\n              >\n                Check answer\n              </Button>\n            )}\n            {checked && (\n              <Button\n                variant={\"contained\"}\n                size={\"large\"}\n                onClick={updateQuotes}\n              >\n                Next\n              </Button>\n            )}\n          </Grid>\n          <div>\n            <Answer checked={checked} isCorrect={isCorrect} />\n          </div>\n        </>\n      ) : (\n        <>\n          <Typography variant=\"h4\" component=\"p\">\n            You're done! You scored {score}/13!\n          </Typography>\n        </>\n      )}\n    </Grid>\n  );\n};\n\nexport default Game;\n","import { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Zoom from \"@mui/material/Zoom\";\nimport logo from \"./static/cake_pic.png\";\nimport BackgroundMusic from \"./components/BackgroundMusic\";\nimport Game from \"./components/Game\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [startGame, setStartGame] = useState(false);\n\n  const handleGameStart = () => {\n    setStartGame(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"Úna and her fla\" />\n      </header>\n      <main>\n        {!startGame ? (\n          <Zoom in={true} style={{ transitionDelay: \"3000ms\" }}>\n            <Button\n              variant={\"contained\"}\n              size={\"large\"}\n              onClick={handleGameStart}\n            >\n              Start the game!\n            </Button>\n          </Zoom>\n        ) : (\n          <>\n            <BackgroundMusic />\n            <Game />\n          </>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}